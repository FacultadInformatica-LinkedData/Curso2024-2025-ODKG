# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1La8kh1sSfLlrh74U_v38pMuwb3cWefmr

**Task 07: Querying RDF(s)**
"""

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
from rdflib.plugins.sparql import prepareQuery


ns = Namespace("http://somewhere#")


q1 = prepareQuery('''
  SELECT ?subclass WHERE {
        ?subclass rdfs:subClassOf ns:LivingThing.
    }
  ''',
  initNs = {'rdfs': RDFS, 'ns': ns}
)


for r in g.query(q1):
 print(r.subclass)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
q2 = prepareQuery('''
   SELECT ?Subject WHERE {
     ?Subject rdf:type ?type.
     ?type rdfs:subClassOf* ns:Person.
   }
   ''',
   initNs = {"rdfs": RDFS, "rdf": RDF, "ns": ns}
 )


for r in g.query(q2):
 print(r.Subject)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

# TO DO
# Visualize the results
q3 = prepareQuery('''
   SELECT ?Subject WHERE {
  {
    ?Subject rdf:type ns:Person.
  }
  UNION
  {
    ?Subject rdf:type ns:Animal.
  }
}
   ''',
   initNs = {"rdf": RDF, "ns": ns}
 )


for r in g.query(q3):
 print(r.Subject)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

# TO DO
# Visualize the results
from rdflib import FOAF

q4 = prepareQuery('''
  SELECT  ?FullName  WHERE {
    ?FullName foaf:knows ns:RockySmith.
  }
  ''',
  initNs = {"foaf": FOAF, "ns": ns}
)

for r in g.query(q4):
  print(r.FullName)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

# TO DO
# Visualize the results
q5 = prepareQuery('''
   SELECT DISTINCT ?AnimalName WHERE {
     ?AnimalName foaf:knows ?OtherAnimal .
     ?AnimalName rdf:type ns:Animal .
     ?OtherAnimal rdf:type ns:Animal
   }
 ''',
 initNs={"foaf": FOAF, "ns": ns, "rdf": RDF}
 )

for r in g.query(q5):
  print(r.AnimalName)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

# TO DO
# Visualize the results
q6 = prepareQuery('''
   SELECT ?LivingThing ?age WHERE {
     ?LivingThing foaf:age ?age.
   }
   ORDER BY DESC(?age)
 ''',
   initNs = {"foaf": FOAF}
 )

for r in g.query(q6):
  print(r.LivingThing, r.age)