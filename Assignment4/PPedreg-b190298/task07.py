# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zRGMmlSCJpIBk6GkN-1t50XGY0Edf9zj

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

q1 = prepareQuery('''
  SELECT ?s WHERE {
    ?s rdfs:subClassOf ns:LivingThing.
  }
  ''',
  initNs={'ns': ns, 'rdfs': RDFS}
)

# Visualize the results
for r in g.query(q1):
    print(r.s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
# TO DO
q2 = prepareQuery('''
  SELECT ?s WHERE {
    {
      ?SubClass rdfs:subClassOf ns:Person.
      ?s rdf:type ?SubClass.
    }
    UNION
    {
      ?s rdf:type ns:Person.
    }
  }
  ''',
  initNs={'ns': ns, 'rdfs': RDFS, 'rdf': RDF}
)

# Visualize the results
for r in g.query(q2):
    print(r.s)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
# TO DO
q3 = prepareQuery('''
  SELECT ?s WHERE {
    ?s rdf:type ?v.
    FILTER (?v = ns:Person || ?v = ns:Animal)
  }
  ''',
  initNs={'ns': ns, 'rdf': RDF}
)

# Visualize the results
for r in g.query(q3):
    print(r.s)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
foaf = Namespace("http://xmlns.com/foaf/0.1/")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
# TO DO
q4 = prepareQuery('''
  SELECT ?v WHERE {
    ?s foaf:knows ns:RockySmith.
    ?s vcard:FN ?v.
  }
  ''',
  initNs={'ns': ns, 'foaf': foaf, 'vcard': vcard}
)

# Visualize the results
for r in g.query(q4):
    print(r.v)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
foaf = Namespace("http://xmlns.com/foaf/0.1/")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
# TO DO
q5 = prepareQuery('''
  SELECT DISTINCT ?v WHERE {
    ?s rdf:type ns:Animal.
    ?s2 rdf:type ns:Animal.
    ?s foaf:knows ?OtherAnimal.
    OPTIONAL { ?s vcard:FN ?v. }
    OPTIONAL { ?s vcard:Given ?v. }
  }
  ''',
  initNs={'ns': ns, 'foaf': foaf, 'vcard': vcard, 'rdf': RDF}
)

# Visualize the results
for r in g.query(q5):
    print(r.v)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
foaf = Namespace("http://xmlns.com/foaf/0.1/")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0/")
# TO DO
q6 = prepareQuery('''
  SELECT ?v ?v2 WHERE {
    ?LivingThingClass rdfs:subClassOf ns:LivingThing.
    { ?LivingThing rdf:type ?LivingThingClass } UNION { ?LivingThing rdf:type ns:LivingThing }
    ?LivingThing foaf:age ?v2.
    OPTIONAL { ?LivingThing vcard:FN ?v. }
    OPTIONAL { ?LivingThing vcard:Given ?v. }
  }
  ORDER BY DESC(?v2)
  ''',
  initNs={'ns': ns, 'foaf': foaf, 'vcard': vcard, 'rdfs': RDFS, 'rdf': RDF}
)

# Visualize the results
for r in g.query(q6):
    print(r.v, r.v2)