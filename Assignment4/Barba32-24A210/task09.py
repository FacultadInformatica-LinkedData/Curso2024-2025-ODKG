# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19U_ifdW9yhhi4-GnnDiXIQonHsWGXc3C

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

print("Visualizar G1: ")
for s, p, o in g1:
  print(s,p,o) # Visualizar el gráfico

print("\nVisualizar G2: ")
for s, p, o in g2:
  print(s,p,o)

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.plugins.sparql import prepareQuery

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

q1= prepareQuery('''
  SELECT DISTINCT ?Subject ?value WHERE {
    ?Subject vcard:FN ?value
  }
  ''',initNs={'vcard':VCARD}
)


print("Buscamos en G1:")
for r in g1.query(q1):
  print(r.Subject)

print("\nBuscamos en G2:")
for r in g2.query(q1):
  print(r.Subject, r.value)

"""### Generamos las relaciones de los que coinciden y las añadimos a G3"""

OWL = Namespace("http://www.w3.org/TR/owl-ref/#")
dt3 = Namespace("http://data.three.org#")
dt4 = Namespace("http://data.four.org#")

g3.add((dt3.SaraJones, OWL.sameAs, dt4["0001"])) # La forma correcta de acceder a URIs que terminan en número es con un []
g3.add((dt3.JohnSmith, OWL.sameAs, dt4["0002"]))
g3.add((dt3.JohnDoe, OWL.sameAs, dt4["0005"]))
g3.add((dt3.HarryPotter, OWL.sameAs, dt4["0003"]))

print("\nVisualizar G3: ")
for s, p, o in g3:
  print(s,p,o)