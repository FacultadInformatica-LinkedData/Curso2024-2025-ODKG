# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nyR-tTtqy8h8yv5vyeslI7oljBQElfoi

**Task 06: Modifying RDF(s)**
"""

# !pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""
ns = Namespace("http://somewhere#")

g.add((ns.Researcher, RDF.type, RDFS.Class))

"""**TASK 6.1: Create new classes for "School" and "University. Add an rdfs:label in Spanish"**
"""

# Add the new classes "School" and "University"
g.add((ns.School, RDF.type, RDFS.Class))
g.add((ns.University, RDF.type, RDFS.Class))

# Add rdfs:label in Spanish for "School" and "University"
g.add((ns.School, RDFS.label, Literal("Escuela", lang="es")))
g.add((ns.University, RDFS.label, Literal("Universidad", lang="es")))

print("TASK 6.1")
# Visualize the results
for s, p, o in g:
    if s in [ns.School, ns.University]:
        print(s,p,o)
print()

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

g.add((ns.Researcher, RDFS.subClassOf, ns.Person))

print("TASK 6.2")

# Visualize the results
for s, p, o in g:
    if s == ns.Researcher:
        print(s,p,o)
print()

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""
g.add((ns.JaneSmithers, RDF.type, ns.Researcher))

print("TASK 6.3")

# Visualize the results
for s, p, o in g:
  if s == ns.JaneSmithers:
    print(s,p,o)
print()

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

# TO DO
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
g.add((ns.JaneSmithers, vcard.FN, Literal("Jane Smithers")))
g.add((ns.JaneSmithers, vcard.email, Literal("jsmithers@example.org")))
g.add((ns.JaneSmithers, vcard.givenName, Literal("Jane")))
g.add((ns.JaneSmithers, vcard.familyName	, Literal("Smithers")))
#the full name is in the 6.3 task
# Visualize the results
print("TASK 6.4")

for s, p, o in g:
    if s == ns.JaneSmithers:
        print(s,p,o)
print()

"""**TASK 6.5: Add UPM as the university where John Smith works. Use the "https://example.org/ namespace**"""

ns2 = Namespace("http://example.org/")
g.add((ns2.UPM, RDF.type, ns.University))
g.add((ns.JohnSmith, ns2.worksFor, ns2.UPM))

print("TASK 6.5")

# Visualize the results
for s, p, o in g:
    if s in [ns.JohnSmith, ns2.UPM]:
        print(s,p,o)
print()

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

FOAF = Namespace("http://xmlns.com/foaf/0.1/")
g.add((ns.JohnSmith, FOAF.knows, ns.JaneSmithers))

print("TASK 6.6")

# Visualize the results
for s, p, o in g:
    if s == ns.JohnSmith and p == FOAF.knows:
        print(s,p,o)
print()
