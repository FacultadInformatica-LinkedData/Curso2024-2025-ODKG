# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UqqC5a5CecCaP8-ysufZwMxfggxJHRMY

**Task 06: Modifying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.1: Create a new class named "University"**

"""

# TO DO
g.add((ns.University, RDF.type, RDFS.Class))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

# TO DO
g.add((ns.Researcher, RDFS.subClassOf, ns.Person))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""

# TO DO
g.add((ns.JaneSmithers, RDF.type, ns.Researcher))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

# TO DO
from rdflib import SDO
g.add((ns.JaneSmithers, SDO.email, Literal("janeSmither@mail.com")))
g.add((ns.JaneSmithers, SDO.name,  Literal("Jane Smither Connors")))
g.add((ns.JaneSmithers, SDO.givenName,  Literal("Jane")))
g.add((ns.JaneSmithers, SDO.familyName,  Literal("Jane Smither")))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.5: Add UPM as the university where John Smith works. Use the "https://example.org/ namespace**"""

# TO DO
g.namespace_manager.bind('ex', Namespace("https://example.org/#"), override=False)
ex = Namespace("https://example.org/#")
g.add((ex.University, RDF.type, RDFS.Class))
g.add((ex.UPM, RDF.type, ex.University))
g.add((ns.JohnSmith, ex.worksIn, ex.UPM))
# Visualize the results
for s, p, o in g:
  print(s,p,o)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

# TO DO
from rdflib import FOAF
g.add((ns.Jown, FOAF.knows, ns.JaneSmithers))
if (ns.Jown,FOAF.knows, ns.JaneSmithers) in g:
    print("The graph CONTAINS the relationship")
else:
    print("The graph DOESN'T contain the relationship")
# Visualize the results
for s, p, o in g:
  print(s,p,o)