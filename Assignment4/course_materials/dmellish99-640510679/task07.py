# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LQL1bhvKMKqXVcxCBdyaUT5vghaSfUY2

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results


ns=Namespace('http://somewhere#')


print('WITH RDFLIB')
for s, p, o in g.triples((None,RDFS.subClassOf,ns.LivingThing)):
  print(s)


from rdflib.plugins.sparql import prepareQuery

q1= prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject rdfs:subClassOf ns:LivingThing.
  }
  ''',
  initNs = { "rdfs": RDFS,"ns":ns}
)

print('WITH SPARQL')
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

print('WITH RDFLIB')
for s, p, o in g.triples((None,RDF.type,ns.Person)):
  print(s)

q2= prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject rdf:type ns:Person.
  }
  ''',
  initNs = { "rdf": RDF,"ns":ns}
)

print('WITH SPARQL')
for r in g.query(q2):
  print(r.Subject)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

# TO DO
# Visualize the results'
q3= prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject ?Predicate ?Object.
    FILTER(?Object in (ns:Animal,ns:Person))
  }
  ''',
  initNs = { "rdf": RDF,"ns":ns}
)

for r in g.query(q3):
  print(r.Subject)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

# TO DO
# Visualize the results

from rdflib import FOAF


q4= prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject foaf:knows ns:RockySmith.

  }
  ''',
  initNs = { "rdf": RDF,"ns":ns}
)

for r in g.query(q4):
  print(r.Subject)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

# TO DO
# Visualize the results

from rdflib import FOAF


q5= prepareQuery('''
  SELECT DISTINCT ?Subject
  WHERE {
    ?Subject foaf:knows ?Object.
    ?Object rdf:type ns:Animal .
  }
  ''',
  initNs = { "rdf": RDF,"ns":ns,"foaf":FOAF,"rdfs":RDFS}
)

for r in g.query(q5):
  print(r.Subject)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

# TO DO
# Visualize the results


q6= prepareQuery('''
  SELECT ?Object
  WHERE {
    ?Subject foaf:age ?Object .
    ?Subject ?Property ?ObjectTwo  .

    ?ObjectTwo rdfs:subClassOf ns:LivingThing .

  }

ORDER BY DESC(?Object)
  ''',
  initNs = { "rdf": RDF,"ns":ns,"foaf":FOAF,"rdfs":RDFS}
)

for r in g.query(q6):
  print(r.Object)


# for s,p,o in g:
#   print(s,p,o)