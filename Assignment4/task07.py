# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XVDoKE-Rg3gOP7V2jMw3fRQ9WSGRpbhT

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")
for s, o, p in g:
  print(s,o, p)

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

# TO DO
q1 = """
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://somewhere#>
SELECT ?subclass WHERE {
    ?subclass rdfs:subClassOf ns:LivingThing.
}
"""

# Visualize the results
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
q2 = """
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://somewhere#>
SELECT ?individual WHERE {
    ?individual rdfs:subClassOf ns:Person.
}
"""
# Visualize the results
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of just "Person" or "Animal". You do not need to list the individuals of the subclasses of person (in SPARQL only)**

"""

# TO DO
q3 = """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://somewhere#>
SELECT ?individual WHERE {
    { ?individual rdf:type ns:Person . }
    UNION
    { ?individual rdf:type ns:Animal . }
}
"""
# Visualize the results
for r in g.query(q3):
  print(r)

"""**TASK 7.4:  List the name of the persons who know Rocky (in SPARQL only)**"""

# TO DO
q4 = """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0#>
PREFIX ns: <http://somewhere#>
PREFIX foaf: <http://xmlns.com/foaf/0.1#>
SELECT ?name WHERE {
    ?person rdf:type ns:Person .
    ?person vcard:FN ?name .
    ?person foaf:knows ns:RockySmith .
}
"""
# Visualize the results
for r in g.query(q4):
  print(r)

"""**Task 7.5: List the name of those animals who know at least another animal in the graph (in SPARQL only)**"""

# TO DO
q5 = """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://somewhere#>
PREFIX foaf: <http://xmlns.com/foaf/0.1#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0#>
SELECT DISTINCT ?animalName WHERE {
    ?animal foaf:knows ?otherAnimal .  # ?animal knows another animal
    ?animal rdf:type ns:Animal .      # Ensure the individual is an Animal
    ?otherAnimal rdf:type ns:Animal . # Ensure the known individual is also an Animal
    ?animal vcard:given ?animalName .   # Get the name of the animal
}
"""
# Visualize the results
for r in g.query(q5):
  print(r)

"""**Task 7.6: List the age of all living things in descending order (in SPARQL only)**"""

# TO DO
q6 = """
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://somewhere#>
PREFIX foaf: <http://xmlns.com/foaf/0.1#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0#>
SELECT ?livingThingName ?age WHERE {
    ?livingThing rdf:type ns:LivingThing .    # Ensure the individual is a LivingThing
    ?livingThing foaf:age ?age .                 # Get the age of the living thing
    ?livingThing rdfs:label ?livingThingName .  # Get the name of the living thing
}
ORDER BY DESC(?age)  # Sort ages in descending order
"""

# Visualize the results
for r in g.query(q6):
  print(r)