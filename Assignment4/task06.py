# -*- coding: utf-8 -*-
"""Task06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HWBVS7CQVXSxOLzl_XCouK48N-UjAGHW

**Task 06: Modifying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

"""Read the RDF file as shown in class"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example5.rdf", format="xml")

"""Create a new class named Researcher"""

ns = Namespace("http://somewhere#")
g.add((ns.Researcher, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.1: Create a new class named "University"**





"""

g.add((ns.University, RDF.type, RDFS.Class))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.2: Add "Researcher" as a subclass of "Person"**"""

g.add((ns.Researcher, RDFS.subClassOf, ns.Person))
for s, p, o in g:
  print(s,p,o)

"""**TASK 6.3: Create a new individual of Researcher named "Jane Smithers"**"""

fullName = Literal("Jane Smithers")
EX = Namespace("http://somewhere#Researcher")
VCARD = Namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#type")

resource = (EX.JaneSmithers, VCARD.FN, fullName)

print(resource)

g.add(resource)

for s, p, o in g:
  print(s,p,o)

"""**TASK 6.4: Add to the individual JaneSmithers the email address, fullName, given and family names. Use the https://schema.org vocabulary**"""

EX = Namespace("http://somewhere")
SCHEMA = Namespace("https://schema.org/")

g.add((EX.JaneSmithers, SCHEMA.EMAIL, Literal("jsmithers@example.org")))
g.add((EX.JaneSmithers, SCHEMA.FN, Literal("Jane Smithers")))
g.add((EX.JaneSmithers, SCHEMA.Given, Literal("Jane")))
g.add((EX.JaneSmithers, SCHEMA.Family, Literal("Smithers")))

for s, p, o in g:
  print(s,p,o)

"""**TASK 6.5: Add UPM as the university where John Smith works. Use the "https://example.org/ namespace**"""

EX = Namespace("http://example.org/")
johnURI = EX.JohnSmith

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
universityName = Literal("UPM")

g.add((EX.johnURI, VCARD.UNI, universityName))

for subj, pred, obj in g:
  print(subj,pred,obj)

"""**Task 6.6: Add that Jown knows Jane using the FOAF vocabulary. Make sure the relationship exists.**"""

from rdflib import FOAF

EX = Namespace("http://example.org/")

g.add((EX.Jown, FOAF.knows, EX.JaneSmithers))
g.add((EX.JaneSmithers, VCARD.FN, Literal('Jane Smithers')))
g.add((EX.Jown, VCARD.FN, Literal('Jown')))

for subj, pred, obj in g:
  print(subj,pred,obj)

from rdflib.plugins.sparql import prepareQuery

query = prepareQuery('''
    SELECT ?Subject ?Subject2 WHERE {
        ?Subject foaf:knows ?Subject2.
    }
''', initNs={"foaf": FOAF})

print("Checking relationships:")
for r in g.query(query):
    print(f"{r.Subject} knows {r.Subject2}")