# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dqdJNKkKg7NXzRtFJ6El80Vjc9B41BWV

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

# TO DO
from rdflib.plugins.sparql import prepareQuery

d3 = Namespace("http://data.three.org#")
d4 = Namespace("http://data.four.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
owl = Namespace("https://www.w3.org/2002/07/owl#")

q1 = prepareQuery('''
  SELECT ?Subject ?Given ?Family WHERE {
    {
      ?Subject rdf:type d3:Person.
      OPTIONAL {?Subject vcard:Family ?Family}.
      OPTIONAL {?Subject vcard:Given ?Given}.
    } UNION {
      ?Subject rdf:type d4:Person.
      OPTIONAL {?Subject vcard:Family ?Family}.
      OPTIONAL {?Subject vcard:Given ?Given}.
    }
  }
  ''',
  initNs={'d3': d3, 'd4':d4, 'vcard': vcard}
)

r2_results = g2.query(q1)

for r1 in g1.query(q1):
  for r2 in r2_results:
    if r1.Given == r2.Given and r1.Family == r2.Family:
        g3.add((r1.Subject, owl.sameAs, r2.Subject))

# Visualize the results
print("People in g1")
for r in g1.query(q1):
  print(r.Subject, r.Given, r.Family)
print("People in g2")
for r in g2.query(q1):
  print(r.Subject, r.Given, r.Family)

print("Relations")
for a,b,c in g3:
  print(a,b,c)