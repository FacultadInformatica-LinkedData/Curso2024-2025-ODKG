# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aA_7cDJnS46kKnLS5uuCGN5_s3QANqk-

**Task 09: Data linking**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2024-2025/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef, OWL

g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"/rdf/data03.rdf", format="xml")
g2.parse(github_storage+"/rdf/data04.rdf", format="xml")


vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
schema = Namespace("http://schema.org/")
ns = Namespace("http://somewhere#")
g1.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g1.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en 
g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no 
tienen por qué ser iguales para un mismo individuo en los dos grafos."""

t1s = g1.query("""
PREFIX ns: <http://somewhere#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0#>
PREFIX data: <http://data.three.org#>
SELECT ?person ?givenName ?familyName ?type
WHERE {
    ?person a ?type .
    ?type rdfs:subClassOf* data:Person .
    ?person vcard:Given ?givenName .
    ?person vcard:Family ?familyName 
}
""")
t2s = g2.query("""
PREFIX ns: <http://somewhere#>
PREFIX vcard: <http://www.w3.org/2001/vcard-rdf/3.0#>
PREFIX data: <http://data.four.org#>
SELECT ?person ?givenName ?familyName
WHERE {
    ?person a ?type .
    ?type rdfs:subClassOf* data:Person .
    ?person vcard:Given ?givenName .
    ?person vcard:Family ?familyName 
}
""")

for t1 in t1s:
    for t2 in t2s:
        # print((t1[1], t2[1], t1[2], t2[2]))
        if t1[1].eq(t2[1]) and t1[2].eq(t2[2]):
            g3.add((t1[0], OWL.sameAs, t2[0]))
            g3.add((t2[0], OWL.sameAs, t1[0]))
            print((t1[1], t2[1], t1[2], t2[2]))

for t in g3:
    print(t)