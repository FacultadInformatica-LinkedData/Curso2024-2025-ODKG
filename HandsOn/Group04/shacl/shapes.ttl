@prefix afn:  <http://jena.apache.org/ARQ/function#> .
@prefix base: <http://www.chargeAndParkMadrid.org/opendata/handsOn/group04/> .
@prefix mod:  <https://w3id.org/mod#> .
@prefix ns:   <http://www.chargeAndParkMadrid.org/opendata/handsOn/group04/ontology/Ontology#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix shsh: <http://www.w3.org/ns/shacl-shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

shsh:PathListWithAtLeast2Members
        rdf:type     sh:NodeShape;
        sh:node      shsh:ListShape;
        sh:property  [ sh:minCount  2;
                       sh:path      [ sh:oneOrMorePath  rdf:rest ]
                     ] .

<https://astrea.linkeddata.es/shapes#fe2a9ead186f6a20feb17c2b6f2965c0>
        rdf:type     sh:PropertyShape;
        rdfs:label   "number of total places";
        sh:name      "number of total places";
        sh:nodeKind  sh:Literal;
        sh:path      ns:numberOfTotalPlaces .

<https://astrea.linkeddata.es/shapes#bd165a2edd05c36ae7a40d3b325ac53f>
        rdf:type     sh:PropertyShape;
        rdfs:label   "is part of";
        sh:class     ns:District;
        sh:name      "is part of";
        sh:nodeKind  sh:BlankNodeOrIRI;
        sh:path      ns:isPartOf .

<https://astrea.linkeddata.es/shapes#225033a8361cf9619e45f1751a32aaa2>
        rdf:type        sh:NodeShape;
        rdfs:label      "District";
        sh:name         "District";
        sh:nodeKind     sh:IRI;
        sh:targetClass  ns:District .

<https://astrea.linkeddata.es/shapes#ba92a0d35c28985052ac561ca932e670>
        rdf:type     sh:PropertyShape;
        rdfs:label   "location";
        sh:name      "location";
        sh:nodeKind  sh:Literal;
        sh:path      ns:location .

<https://astrea.linkeddata.es/shapes#f4a3f43e2719fc5203fe0a3e8cf99b53>
        rdf:type     sh:PropertyShape;
        rdfs:label   "discharge date";
        sh:name      "discharge date";
        sh:nodeKind  sh:Literal;
        sh:path      ns:dischargeDate .

<https://astrea.linkeddata.es/shapes#7e64208ae5b000658bc63511072e0583>
        rdf:type     sh:PropertyShape;
        rdfs:label   "located in neighborhood";
        sh:class     ns:Neighborhood;
        sh:name      "located in neighborhood";
        sh:nodeKind  sh:BlankNodeOrIRI;
        sh:path      ns:locatedInNeighborhood .

shsh:PathShape  rdf:type  sh:NodeShape;
        rdfs:comment  "A shape that can be used to validate the syntax rules of well-formed SHACL paths."@en;
        rdfs:label    "Path shape"@en;
        rdfs:seeAlso  <https://www.w3.org/TR/shacl/#property-paths>;
        sh:property   [ sh:node  shsh:PathNodeShape;
                        sh:path  [ sh:zeroOrMorePath  [ sh:alternativePath  ( ( [ sh:zeroOrMorePath  rdf:rest ]
                                                                                rdf:first
                                                                              ) ( sh:alternativePath
                                                                                  [ sh:zeroOrMorePath  rdf:rest ]
                                                                                  rdf:first
                                                                                ) sh:inversePath sh:zeroOrMorePath sh:oneOrMorePath sh:zeroOrOnePath )
                                                      ]
                                 ]
                      ] .

<https://astrea.linkeddata.es/shapes#030a942febc696ff691a86a7366d86bf>
        rdf:type     sh:PropertyShape;
        rdfs:label   "ccs connectors";
        sh:name      "ccs connectors";
        sh:nodeKind  sh:Literal;
        sh:path      ns:ccsConnectors .

<https://astrea.linkeddata.es/shapes#bdb028c43cb9a8a5f2c014e96520f14f>
        rdf:type        sh:NodeShape;
        rdfs:label      "Parking";
        sh:name         "Parking";
        sh:nodeKind     sh:IRI;
        sh:property     <https://astrea.linkeddata.es/shapes#4bd8fdd573da7353bce11fc37fc70a34>;
        sh:targetClass  ns:Parking .

<http://astrea.linkeddata.es/report>
        rdf:type  <https://w3id.org/def/astrea#ShapeReport>;
        <https://w3id.org/def/astrea#contains>
                <https://astrea.linkeddata.es/shapes#a1deae434d85eb1818a1b689bceb1496> , <https://astrea.linkeddata.es/shapes#5f93476770fceae76d9dcf4704e9785c> , <https://astrea.linkeddata.es/shapes#a547f0ce9ecd5b551fe16626f04101b2> , <https://astrea.linkeddata.es/shapes#34fdba8a91266ab9395aa062741a4023> , <https://astrea.linkeddata.es/shapes#b0b0a4e5ee92b028c82a90429abdd3cf> , <https://astrea.linkeddata.es/shapes#644149c5e7dbaa6be26caafa194706a3> , <https://astrea.linkeddata.es/shapes#bdb028c43cb9a8a5f2c014e96520f14f> , <https://astrea.linkeddata.es/shapes#fd7b1919e6f6bac88feaaaaf40595f6f> , <https://astrea.linkeddata.es/shapes#f4a3f43e2719fc5203fe0a3e8cf99b53> , <https://astrea.linkeddata.es/shapes#315683510365803769748e8fb914d11b> , <https://astrea.linkeddata.es/shapes#2d9001c3bdde6413f33f0fa8eef56ffc> , <https://astrea.linkeddata.es/shapes#723b25b01978136ec41b36b30e84e711> , <https://astrea.linkeddata.es/shapes#ba92a0d35c28985052ac561ca932e670> , <https://astrea.linkeddata.es/shapes#030a942febc696ff691a86a7366d86bf> , <https://astrea.linkeddata.es/shapes#896dc736136dd256d2072c6d52119c90> , <https://astrea.linkeddata.es/shapes#225033a8361cf9619e45f1751a32aaa2> , <https://astrea.linkeddata.es/shapes#86b8a1839361337e86d334160f7305c4> , <https://astrea.linkeddata.es/shapes#fe2a9ead186f6a20feb17c2b6f2965c0> , <https://astrea.linkeddata.es/shapes#bd165a2edd05c36ae7a40d3b325ac53f> , <https://astrea.linkeddata.es/shapes#ce13090311b557848f4b4a86d82db595> , <https://astrea.linkeddata.es/shapes#b11f0a6ff4ca05fbae04b45d24e4eb3a> , <https://astrea.linkeddata.es/shapes#0398e8518ee40c24ffb24bd2eda33a62> , <https://astrea.linkeddata.es/shapes#4bd8fdd573da7353bce11fc37fc70a34> , <https://astrea.linkeddata.es/shapes#7e64208ae5b000658bc63511072e0583>;
        <https://w3id.org/def/astrea#generatedShapesFrom>
                <https://astrea.linkeddata.es/report/0620946147> .

shsh:NodeShapeShape  rdf:type  sh:NodeShape;
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:path
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:lessThan
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:lessThanOrEquals
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:maxCount
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:minCount
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:qualifiedValueShape
                            ];
        sh:property         [ sh:maxCount  0;
                              sh:path      sh:uniqueLang
                            ];
        sh:targetObjectsOf  sh:node .

shsh:ListNodeShape  rdf:type  sh:NodeShape;
        rdfs:comment  "Defines constraints on what it means for a node to be a node within a well-formed RDF list. Note that this does not check whether the rdf:rest items are also well-formed lists as this would lead to unsupported recursion."@en;
        rdfs:label    "List node shape"@en;
        sh:or         ( [ sh:hasValue  ();
                          sh:property  [ sh:maxCount  0;
                                         sh:path      rdf:first
                                       ];
                          sh:property  [ sh:maxCount  0;
                                         sh:path      rdf:rest
                                       ]
                        ]
                        [ sh:not       [ sh:hasValue  ()
                                       ];
                          sh:property  [ sh:maxCount  1;
                                         sh:minCount  1;
                                         sh:path      rdf:first
                                       ];
                          sh:property  [ sh:maxCount  1;
                                         sh:minCount  1;
                                         sh:path      rdf:rest
                                       ]
                        ]
                      ) .

<https://astrea.linkeddata.es/shapes#a547f0ce9ecd5b551fe16626f04101b2>
        rdf:type        sh:NodeShape;
        rdfs:label      "Operator";
        sh:name         "Operator";
        sh:nodeKind     sh:IRI;
        sh:targetClass  ns:Operator .

shsh:ShapesGraphShape
        rdf:type            sh:NodeShape;
        sh:nodeKind         sh:IRI;
        sh:targetObjectsOf  sh:shapesGraph .

<https://astrea.linkeddata.es/shapes#86b8a1839361337e86d334160f7305c4>
        rdf:type     sh:PropertyShape;
        rdfs:label   "chademo kw";
        sh:name      "chademo kw";
        sh:nodeKind  sh:Literal;
        sh:path      ns:chademoKw .

<https://astrea.linkeddata.es/shapes#b0b0a4e5ee92b028c82a90429abdd3cf>
        rdf:type        sh:NodeShape;
        rdfs:label      "Street";
        sh:name         "Street";
        sh:nodeKind     sh:IRI;
        sh:property     <https://astrea.linkeddata.es/shapes#7e64208ae5b000658bc63511072e0583>;
        sh:targetClass  ns:Street .

shsh:PropertyShapeShape
        rdf:type            sh:NodeShape;
        sh:property         [ sh:maxCount  1;
                              sh:minCount  1;
                              sh:or        ( shsh:PathShape
                                             [ sh:nodeKind  sh:IRI ]
                                           );
                              sh:path      sh:path
                            ];
        sh:targetObjectsOf  sh:property .

<https://astrea.linkeddata.es/shapes#2d9001c3bdde6413f33f0fa8eef56ffc>
        rdf:type     sh:PropertyShape;
        rdfs:label   "mennekes connectors";
        sh:name      "mennekes connectors";
        sh:nodeKind  sh:Literal;
        sh:path      ns:mennekesConnectors .

<https://astrea.linkeddata.es/report/0620946147>
        rdf:type  <https://w3id.org/def/astrea#ReportEntry>;
        <https://w3id.org/def/astrea#message>
                "Shapes generated with no errors";
        <https://w3id.org/def/astrea#statusCode>
                "200"^^xsd:int .

shsh:ListShape  rdf:type  sh:NodeShape;
        rdfs:comment  "A shape describing well-formed RDF lists. Currently does not check for non-recursion. This could be expressed using SHACL-SPARQL."@en;
        rdfs:label    "List shape"@en;
        rdfs:seeAlso  <https://www.w3.org/TR/shacl/#syntax-rule-SHACL-list>;
        sh:property   [ rdfs:comment  "Each list member (including this node) must be have the shape shsh:ListNodeShape."@en;
                        sh:hasValue   ();
                        sh:node       shsh:ListNodeShape;
                        sh:path       [ sh:zeroOrMorePath  rdf:rest ]
                      ] .

<https://astrea.linkeddata.es/shapes#a1deae434d85eb1818a1b689bceb1496>
        rdf:type        sh:NodeShape;
        rdfs:label      "Charge Point";
        sh:name         "Charge Point";
        sh:nodeKind     sh:IRI;
        sh:property     <https://astrea.linkeddata.es/shapes#0398e8518ee40c24ffb24bd2eda33a62> , <https://astrea.linkeddata.es/shapes#4bd8fdd573da7353bce11fc37fc70a34>;
        sh:targetClass  ns:ChargePoint .

<https://astrea.linkeddata.es/shapes#644149c5e7dbaa6be26caafa194706a3>
        rdf:type     sh:PropertyShape;
        rdfs:label   "postal code";
        sh:name      "postal code";
        sh:nodeKind  sh:Literal;
        sh:path      ns:postalCode .

<https://astrea.linkeddata.es/shapes#0398e8518ee40c24ffb24bd2eda33a62>
        rdf:type     sh:PropertyShape;
        rdfs:label   "managed by";
        sh:class     ns:Operator;
        sh:name      "managed by";
        sh:nodeKind  sh:BlankNodeOrIRI;
        sh:path      ns:managedBy .

<https://astrea.linkeddata.es/shapes#315683510365803769748e8fb914d11b>
        rdf:type     sh:PropertyShape;
        rdfs:label   "ccs kw";
        sh:name      "ccs kw";
        sh:nodeKind  sh:Literal;
        sh:path      ns:ccsKw .

<https://astrea.linkeddata.es/shapes#5f93476770fceae76d9dcf4704e9785c>
        rdf:type        sh:NodeShape;
        rdfs:label      "Neighborhood";
        sh:name         "Neighborhood";
        sh:nodeKind     sh:IRI;
        sh:property     <https://astrea.linkeddata.es/shapes#bd165a2edd05c36ae7a40d3b325ac53f>;
        sh:targetClass  ns:Neighborhood .

shsh:   rdfs:comment  "This shapes graph can be used to validate SHACL shapes graphs against a subset of the syntax rules."@en;
        rdfs:label    "SHACL for SHACL"@en;
        sh:declare    [ sh:namespace  "http://www.w3.org/ns/shacl-shacl#";
                        sh:prefix     "shsh"
                      ] .

shsh:EntailmentShape  rdf:type  sh:NodeShape;
        sh:nodeKind         sh:IRI;
        sh:targetObjectsOf  sh:entailment .

<https://astrea.linkeddata.es/shapes#34fdba8a91266ab9395aa062741a4023>
        rdf:type     sh:PropertyShape;
        rdfs:label   "mennekes kw";
        sh:name      "mennekes kw";
        sh:nodeKind  sh:Literal;
        sh:path      ns:mennekesKw .

<https://astrea.linkeddata.es/shapes#723b25b01978136ec41b36b30e84e711>
        rdf:type     sh:PropertyShape;
        rdfs:label   "label";
        sh:name      "label";
        sh:nodeKind  sh:Literal;
        sh:path      rdf:label .

shsh:ShapeShape  rdf:type    sh:NodeShape;
        rdfs:comment         "A shape that can be used to validate syntax rules for other shapes."@en;
        rdfs:label           "Shape shape"@en;
        sh:or                ( [ sh:not  [ sh:class  rdfs:Class;
                                           sh:or     ( [ sh:class  sh:NodeShape ]
                                                       [ sh:class  sh:PropertyShape ]
                                                     )
                                         ]
                               ]
                               [ sh:nodeKind  sh:IRI ]
                             );
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:equals
                             ];
        sh:property          [ sh:datatype  xsd:boolean;
                               sh:maxCount  1;
                               sh:path      sh:uniqueLang
                             ];
        sh:property          [ sh:nodeKind  sh:IRIOrLiteral;
                               sh:path      sh:targetNode
                             ];
        sh:property          [ sh:node  shsh:ListShape;
                               sh:path  sh:xone
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:IRI;
                               sh:path      sh:datatype
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:maxLength
                             ];
        sh:property          [ sh:datatype  xsd:string;
                               sh:maxCount  1;
                               sh:path      sh:flags
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:lessThanOrEquals
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:path      sh:qualifiedValueShape
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:maxCount
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:Literal;
                               sh:path      sh:maxInclusive
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:node      shsh:ListShape;
                               sh:path      sh:ignoredProperties
                             ];
        sh:property          [ sh:node  shsh:ListShape;
                               sh:path  sh:and
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:IRI;
                               sh:path      sh:severity
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      ( sh:ignoredProperties
                                              [ sh:zeroOrMorePath  rdf:rest ]
                                              rdf:first
                                            )
                             ];
        sh:property          [ sh:datatype  xsd:boolean;
                               sh:maxCount  1;
                               sh:path      sh:qualifiedValueShapesDisjoint
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:minLength
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:qualifiedMaxCount
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:targetClass
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:targetSubjectsOf
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:Literal;
                               sh:path      sh:minInclusive
                             ];
        sh:property          [ sh:node  shsh:ListShape;
                               sh:path  sh:or
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:node      shsh:ListShape;
                               sh:path      sh:in
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:class
                             ];
        sh:property          [ sh:in        ( true false );
                               sh:maxCount  1;
                               sh:path      sh:deactivated
                             ];
        sh:property          [ sh:datatype  xsd:string;
                               sh:path      ( sh:languageIn
                                              [ sh:zeroOrMorePath  rdf:rest ]
                                              rdf:first
                                            )
                             ];
        sh:property          [ sh:datatype  xsd:boolean;
                               sh:maxCount  1;
                               sh:path      sh:closed
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:minCount
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:node      shsh:ListShape;
                               sh:path      sh:languageIn
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:targetObjectsOf
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:disjoint
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:Literal;
                               sh:path      sh:maxExclusive
                             ];
        sh:property          [ sh:or    ( [ sh:datatype  xsd:string ]
                                          [ sh:datatype  rdf:langString ]
                                        );
                               sh:path  sh:message
                             ];
        sh:property          [ sh:maxCount  1;
                               sh:nodeKind  sh:Literal;
                               sh:path      sh:minExclusive
                             ];
        sh:property          [ sh:datatype  xsd:integer;
                               sh:maxCount  1;
                               sh:path      sh:qualifiedMinCount
                             ];
        sh:property          [ sh:in        ( sh:BlankNode sh:IRI sh:Literal sh:BlankNodeOrIRI sh:BlankNodeOrLiteral sh:IRIOrLiteral );
                               sh:maxCount  1;
                               sh:path      sh:nodeKind
                             ];
        sh:property          [ sh:nodeKind  sh:IRI;
                               sh:path      sh:lessThan
                             ];
        sh:property          [ sh:datatype  xsd:string;
                               sh:maxCount  1;
                               sh:path      sh:pattern
                             ];
        sh:targetClass       sh:NodeShape , sh:PropertyShape;
        sh:targetObjectsOf   sh:not , sh:qualifiedValueShape , sh:node , sh:property;
        sh:targetSubjectsOf  sh:languageIn , sh:pattern , sh:qualifiedValueShape , sh:targetClass , sh:minLength , sh:maxLength , sh:or , sh:ignoredProperties , sh:minInclusive , sh:targetSubjectsOf , sh:equals , sh:qualifiedValueShapesDisjoint , sh:xone , sh:hasValue , sh:class , sh:uniqueLang , sh:qualifiedMaxCount , sh:nodeKind , sh:disjoint , sh:not , sh:in , sh:flags , sh:lessThanOrEquals , sh:maxExclusive , sh:qualifiedMinCount , sh:targetObjectsOf , sh:property , sh:node , sh:targetNode , sh:datatype , sh:sparql , sh:closed , sh:maxCount , sh:and , sh:minCount , sh:minExclusive , sh:maxInclusive , sh:lessThan;
        sh:xone              ( shsh:NodeShapeShape shsh:PropertyShapeShape ) .

<https://astrea.linkeddata.es/shapes#ce13090311b557848f4b4a86d82db595>
        rdf:type     sh:PropertyShape;
        rdfs:label   "number of equipments";
        sh:name      "number of equipments";
        sh:nodeKind  sh:Literal;
        sh:path      ns:numberOfEquipments .

<https://astrea.linkeddata.es/shapes#896dc736136dd256d2072c6d52119c90>
        rdf:type     sh:PropertyShape;
        rdfs:label   "opening hours";
        sh:name      "opening hours";
        sh:nodeKind  sh:Literal;
        sh:path      ns:openingHours .

<https://astrea.linkeddata.es/shapes#4bd8fdd573da7353bce11fc37fc70a34>
        rdf:type     sh:PropertyShape;
        rdfs:label   "located in street";
        sh:class     ns:Street;
        sh:name      "located in street";
        sh:nodeKind  sh:BlankNodeOrIRI;
        sh:path      ns:locatedInStreet .

shsh:PathNodeShape  sh:xone  ( [ sh:nodeKind  sh:IRI ]
                               [ sh:node      shsh:PathListWithAtLeast2Members;
                                 sh:nodeKind  sh:BlankNode
                               ]
                               [ sh:closed    true;
                                 sh:nodeKind  sh:BlankNode;
                                 sh:property  [ sh:maxCount  1;
                                                sh:minCount  1;
                                                sh:node      shsh:PathListWithAtLeast2Members;
                                                sh:path      sh:alternativePath
                                              ]
                               ]
                               [ sh:closed    true;
                                 sh:nodeKind  sh:BlankNode;
                                 sh:property  [ sh:maxCount  1;
                                                sh:minCount  1;
                                                sh:path      sh:inversePath
                                              ]
                               ]
                               [ sh:closed    true;
                                 sh:nodeKind  sh:BlankNode;
                                 sh:property  [ sh:maxCount  1;
                                                sh:minCount  1;
                                                sh:path      sh:zeroOrMorePath
                                              ]
                               ]
                               [ sh:closed    true;
                                 sh:nodeKind  sh:BlankNode;
                                 sh:property  [ sh:maxCount  1;
                                                sh:minCount  1;
                                                sh:path      sh:oneOrMorePath
                                              ]
                               ]
                               [ sh:closed    true;
                                 sh:nodeKind  sh:BlankNode;
                                 sh:property  [ sh:maxCount  1;
                                                sh:minCount  1;
                                                sh:path      sh:zeroOrOnePath
                                              ]
                               ]
                             ) .

<https://astrea.linkeddata.es/shapes#fd7b1919e6f6bac88feaaaaf40595f6f>
        rdf:type     sh:PropertyShape;
        rdfs:label   "accessibility";
        sh:name      "accessibility";
        sh:nodeKind  sh:Literal;
        sh:path      ns:accessibility .

shsh:ShapesListShape  rdf:type  sh:NodeShape;
        sh:property         [ sh:node  shsh:ShapeShape;
                              sh:path  ( [ sh:zeroOrMorePath  rdf:rest ]
                                         rdf:first
                                       )
                            ];
        sh:targetObjectsOf  sh:and , sh:or , sh:xone .

<https://astrea.linkeddata.es/shapes#b11f0a6ff4ca05fbae04b45d24e4eb3a>
        rdf:type     sh:PropertyShape;
        rdfs:label   "chademo connectors";
        sh:name      "chademo connectors";
        sh:nodeKind  sh:Literal;
        sh:path      ns:chademoConnectors .
